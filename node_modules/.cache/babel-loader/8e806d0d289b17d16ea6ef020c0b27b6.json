{"ast":null,"code":"var _jsxFileName = \"/Users/keenanberry/Development/industry/my-app/src/components/TextFields.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nconst textStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\nconst dataTypes = [{\n  value: 'Indication',\n  label: 'Indication'\n}, {\n  value: 'Drug',\n  label: 'Drug'\n}]; //const classes = textStyles();\n// *************************** ERROR: invalid hook call **********************************\n// const [values, setValues] = React.useState({\n//   number: '5',\n//   datatype: 'indication',\n// });\n// const handleChange = name => event => {\n//   setValues({ ...values, [name]: event.target.value });\n// };\n\nexport default class TextFields extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert(this.state.value + ' file was submitted');\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: textStyles.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-datatype\",\n      select: true,\n      label: \"Select\",\n      className: textStyles.textField,\n      value: this.state.value,\n      onChange: this.handleChange,\n      SelectProps: {\n        MenuProps: {\n          className: textStyles.menu\n        }\n      },\n      helperText: \"Please select the file type\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, dataTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-number\",\n      label: \"Number of existing entries\" //value=\"5\"\n      //onChange={handleChange('n')}\n      ,\n      type: \"number\",\n      className: textStyles.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: \"normal\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/keenanberry/Development/industry/my-app/src/components/TextFields.js"],"names":["React","makeStyles","MenuItem","TextField","textStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","dataTypes","value","label","TextFields","Component","constructor","props","state","handleChange","bind","handleSubmit","event","setState","target","alert","preventDefault","render","MenuProps","className","map","option","shrink"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst textStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    dense: {\n      marginTop: theme.spacing(2),\n    },\n    menu: {\n      width: 200,\n    },\n  }));\n\n  const dataTypes = [\n    {\n      value: 'Indication',\n      label: 'Indication',\n    },\n    {\n      value: 'Drug',\n      label: 'Drug',\n    },\n  ];\n\n//const classes = textStyles();\n\n// *************************** ERROR: invalid hook call **********************************\n\n// const [values, setValues] = React.useState({\n//   number: '5',\n//   datatype: 'indication',\n// });\n\n// const handleChange = name => event => {\n//   setValues({ ...values, [name]: event.target.value });\n// };\n\n\nexport default class TextFields extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert(this.state.value + ' file was submitted');\n    event.preventDefault();\n  }\n\n  render() {\n\n    return (\n      <form onSubmit={this.handleSubmit} className={textStyles.container} noValidate autoComplete=\"off\">\n          <TextField\n              id=\"standard-select-datatype\"\n              select\n              label=\"Select\"\n              className={textStyles.textField}\n              value={this.state.value}\n              onChange={this.handleChange}\n              SelectProps={{\n              MenuProps: {\n                  className: textStyles.menu,\n                  },\n              }}\n              helperText=\"Please select the file type\"\n              margin=\"normal\"\n              variant=\"outlined\"\n          >\n              {dataTypes.map(option => (\n              <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n              </MenuItem>\n              ))}\n          </TextField>\n          <TextField\n              id=\"standard-number\"\n              label=\"Number of existing entries\"\n              //value=\"5\"\n              //onChange={handleChange('n')}\n              type=\"number\"\n              className={textStyles.textField}\n              InputLabelProps={{\n              shrink: true,\n              }}\n              margin=\"normal\"\n              variant=\"outlined\"\n          />\n          <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}