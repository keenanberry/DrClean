{"ast":null,"code":"import _slicedToArray from \"/Users/keenanberry/Development/industry/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/keenanberry/Development/industry/my-app/src/components/Header.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nexport default function Header() {\n  const classes = useStyles();\n\n  const _useState = useState(\"inherit\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        uploadButtonState = _useState2[0],\n        setUploadButtonState = _useState2[1];\n\n  const _useState3 = useState(\"inherit\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        labelButtonState = _useState4[0],\n        setLabelButtonState = _useState4[1];\n\n  const _useState5 = useState(\"inherit\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        downloadButtonState = _useState6[0],\n        setDownloadButtonState = _useState6[1];\n\n  function enforceButtonSelection(setter) {\n    [setUploadButtonState, setLabelButtonState, setDownloadButtonState].forEach(fn => {\n      fn(\"inherit\");\n    });\n    setter(\"secondary\");\n  } // 1. clear selection of buttons\n  // 2. apply selection of buttons to one clicked\n  // 3. activate the components that are part of that screen\n\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.homeButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(HomeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    align: \"left\",\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"KantarClean\"), React.createElement(Button, {\n    backgroundColor: uploadButtonState,\n    onClick: enforceButtonSelection.bind(null, setUploadButtonState),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Upload\"), React.createElement(Button, {\n    color: labelButtonState,\n    onClick: enforceButtonSelection.bind(null, setLabelButtonState),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Label\"), React.createElement(Button, {\n    color: downloadButtonState,\n    onClick: enforceButtonSelection.bind(null, setDownloadButtonState),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Download\"))));\n}","map":{"version":3,"sources":["/Users/keenanberry/Development/industry/my-app/src/components/Header.js"],"names":["React","useState","makeStyles","AppBar","Toolbar","Typography","IconButton","HomeIcon","Button","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","uploadButtonState","setUploadButtonState","labelButtonState","setLabelButtonState","downloadButtonState","setDownloadButtonState","enforceButtonSelection","setter","forEach","fn","homeButton","bind"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport Button from \"@material-ui/core/Button\"; \n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles(); \n  const [uploadButtonState, setUploadButtonState] = useState(\"inherit\");\n  const [labelButtonState, setLabelButtonState] = useState(\"inherit\");\n  const [downloadButtonState, setDownloadButtonState] = useState(\"inherit\");\n\n  function enforceButtonSelection(setter) {\n    [setUploadButtonState, setLabelButtonState, setDownloadButtonState].forEach(fn => { fn(\"inherit\"); });\n    setter(\"secondary\");\n  } \n  // 1. clear selection of buttons\n  // 2. apply selection of buttons to one clicked\n  // 3. activate the components that are part of that screen\n  return (\n    <div className={classes.root}>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          className={classes.homeButton}\n          color=\"inherit\"\n          aria-label=\"menu\"\n        >\n          <HomeIcon />\n        </IconButton>\n        <Typography align=\"left\" variant=\"h6\" className={classes.title}>\n          KantarClean\n        </Typography>\n        <Button backgroundColor={uploadButtonState} onClick={enforceButtonSelection.bind(null, setUploadButtonState)}>Upload</Button> \n        <Button color={labelButtonState} onClick={enforceButtonSelection.bind(null, setLabelButtonState)}>Label</Button> \n        <Button color={downloadButtonState} onClick={enforceButtonSelection.bind(null, setDownloadButtonState)}>Download</Button> \n      </Toolbar>\n    </AppBar>\n  </div>\n  ); \n}"]},"metadata":{},"sourceType":"module"}