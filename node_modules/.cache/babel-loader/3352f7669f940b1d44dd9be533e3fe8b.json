{"ast":null,"code":"var _jsxFileName = \"/Users/keenanberry/Development/industry/my-app/src/components/RecommendationTable.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '80%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 650\n  },\n  head: {\n    color: theme.palette.primary.main\n  },\n  foot: {\n    margin: theme.spacing(1),\n    //backgroundColor: theme.palette.error.main,\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white\n  },\n  textField: {\n    marginLeft: theme.spacing(0),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(1),\n    //backgroundColor: theme.palette.error.main,\n    backgroundColor: 'orange',\n    color: theme.palette.common.white\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.text.disabled,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nfunction createData(support, tumor, subtype) {\n  return {\n    support,\n    tumor,\n    subtype\n  };\n}\n\nfunction createHeaderData(conditionCount, totalCount, labelCount, totalLabelCount, condition) {\n  return {\n    conditionCount,\n    totalCount,\n    labelCount,\n    totalLabelCount,\n    condition\n  };\n}\n\nconst rows = [createData(['Acute Lymphoblastic Leukemia (ALL)/T Lymphoblastic Lymphoma', '1)Acute Lymphoblastic Leukemia2) Lymphoblastic Lymphoma', 'Acute Lymphoblastic Leukemia and Lymphoblastic Lymphoma'], 'ALL', ''), createData(['Acute Lymphoblastic Lymphoma'], 'Lymphoma', 'B-Cell Lymphoma'), createData(['Lymphoma, Acute Lymphoblastic Leukemia'], 'Lymphoma', '')];\nconst headRows = [{\n  id: 'support',\n  numeric: false,\n  disablePadding: true,\n  label: 'Existing Database Entries'\n}, {\n  id: 'tumor',\n  numeric: false,\n  disablePadding: false,\n  label: 'Tumor Type'\n}, {\n  id: 'subtype',\n  numeric: false,\n  disablePadding: false,\n  label: 'Tumor Subtype'\n}]; // const dataHead = [\n//   createHeaderData([4, 256, 1, 7, 'Acute Lymphoblastic Leukemia (ALL) and Lymphoblastic Lymphoma'])\n// ]\n\nexport default function RecommendationTable() {\n  const classes = useStyles();\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBttom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Condition (1 of 256)\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    gutterBttom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(Typography, {\n    gutterBttom: true,\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Possible \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"ALL\"), \" (1 of 7) : \"), React.createElement(Typography, {\n    gutterBttom: true,\n    variant: \"h6\",\n    component: \"h2\",\n    className: classes.head,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Acute Lymphoblastic Leukemia (ALL) and Lymphoblastic Lymphoma \\xA0 \"), React.createElement(Button, {\n    variant: \"contained\",\n    component: \"span\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Duplicate\")), React.createElement(Typography, {\n    gutterBttom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Existing Database Entries\")), React.createElement(StyledTableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Tumor Type\")), React.createElement(StyledTableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Tumor Subtype\")), React.createElement(StyledTableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    key: row.support,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, row.support[0]), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, row.support[1]), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, row.support[2])), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, row.tumor), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, row.subtype), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })))), React.createElement(TableRow, {\n    key: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Other\"), \"\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    component: \"span\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Duplicate\")), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-dense\",\n    label: \"Enter tumor type\",\n    className: clsx(classes.textField, classes.dense),\n    margin: \"dense\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }))), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-dense\",\n    label: \"Enter tumor subtype\",\n    className: clsx(classes.textField, classes.dense),\n    margin: \"dense\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }))), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })))), React.createElement(TableFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    component: \"span\",\n    className: classes.foot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Back\")), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    component: \"span\",\n    className: classes.foot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Next\")))))));\n}","map":{"version":3,"sources":["/Users/keenanberry/Development/industry/my-app/src/components/RecommendationTable.js"],"names":["React","clsx","withStyles","makeStyles","Table","TableBody","TableCell","TableHead","TableFooter","TableRow","Paper","Grid","Typography","Divider","TextField","Button","Checkbox","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","head","color","palette","primary","main","foot","margin","backgroundColor","common","white","textField","marginLeft","marginRight","dense","button","StyledTableCell","text","disabled","body","fontSize","createData","support","tumor","subtype","createHeaderData","conditionCount","totalCount","labelCount","totalLabelCount","condition","rows","headRows","id","numeric","disablePadding","label","RecommendationTable","classes","map","row"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '80%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  head: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  foot: {\r\n    margin: theme.spacing(1),\r\n    //backgroundColor: theme.palette.error.main,\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(0),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    //backgroundColor: theme.palette.error.main,\r\n    backgroundColor: 'orange',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.text.disabled,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nfunction createData(support, tumor, subtype) {\r\n  return { support, tumor, subtype };\r\n}\r\n\r\nfunction createHeaderData(conditionCount, totalCount, labelCount, totalLabelCount, condition) {\r\n  return { conditionCount, totalCount, labelCount, totalLabelCount, condition };\r\n}\r\n\r\nconst rows = [\r\n  createData(['Acute Lymphoblastic Leukemia (ALL)/T Lymphoblastic Lymphoma',\r\n  '1)Acute Lymphoblastic Leukemia2) Lymphoblastic Lymphoma',\r\n  'Acute Lymphoblastic Leukemia and Lymphoblastic Lymphoma'], \r\n  'ALL', ''),\r\n  createData(['Acute Lymphoblastic Lymphoma'], 'Lymphoma', 'B-Cell Lymphoma'),\r\n  createData(['Lymphoma, Acute Lymphoblastic Leukemia'], 'Lymphoma', ''),\r\n];\r\n\r\nconst headRows = [\r\n  { id: 'support', numeric: false, disablePadding: true, label: 'Existing Database Entries' },\r\n  { id: 'tumor', numeric: false, disablePadding: false, label: 'Tumor Type' },\r\n  { id: 'subtype', numeric: false, disablePadding: false, label: 'Tumor Subtype' },\r\n];\r\n\r\n// const dataHead = [\r\n//   createHeaderData([4, 256, 1, 7, 'Acute Lymphoblastic Leukemia (ALL) and Lymphoblastic Lymphoma'])\r\n// ]\r\n\r\nexport default function RecommendationTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n    container\r\n    direction=\"column\"\r\n    justify=\"center\"\r\n    alignItems=\"center\"\r\n    >\r\n      <Paper className={classes.root}>\r\n      <Typography gutterBttom variant=\"h5\" component=\"h2\">Condition (1 of 256)</Typography>\r\n      <Divider />\r\n      <Typography gutterBttom>&nbsp;</Typography>\r\n      <Typography gutterBttom variant=\"h6\" component=\"h2\">Possible <strong>ALL</strong> (1 of 7) : </Typography>\r\n      <Typography gutterBttom variant=\"h6\" component=\"h2\" className={classes.head}><strong>Acute Lymphoblastic Leukemia (ALL) and Lymphoblastic Lymphoma &nbsp; </strong>\r\n      <Button variant=\"contained\" component=\"span\" className={classes.button}>\r\n        Duplicate\r\n      </Button>\r\n      </Typography>\r\n      \r\n      <Typography gutterBttom>&nbsp;</Typography>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell><strong>Existing Database Entries</strong></StyledTableCell>\r\n              <StyledTableCell align=\"left\"><strong>Tumor Type</strong></StyledTableCell>\r\n              <StyledTableCell align=\"left\"><strong>Tumor Subtype</strong></StyledTableCell>  \r\n              <StyledTableCell align=\"left\"><Checkbox/></StyledTableCell> \r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.support}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <TableRow>{row.support[0]}</TableRow>\r\n                  <TableRow>{row.support[1]}</TableRow>\r\n                  <TableRow>{row.support[2]}</TableRow>\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.tumor}</TableCell>\r\n                <TableCell align=\"left\">{row.subtype}</TableCell>\r\n                <TableCell><Checkbox/></TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow key='other'>\r\n              <TableCell component=\"th\" scope=\"row\"><strong>Other</strong>&nbsp; \r\n                <Button variant=\"contained\" component=\"span\" className={classes.button}>\r\n                  Duplicate\r\n                </Button>\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                <div>\r\n                  <TextField\r\n                    id=\"outlined-dense\"\r\n                    label=\"Enter tumor type\"\r\n                    className={clsx(classes.textField, classes.dense)}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"                  \r\n                  />\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                <div>\r\n                  <TextField\r\n                    id=\"outlined-dense\"\r\n                    label=\"Enter tumor subtype\"\r\n                    className={clsx(classes.textField, classes.dense)}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"                  \r\n                  />\r\n                </div>\r\n              </TableCell>\r\n              <TableCell><Checkbox/></TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Button variant=\"contained\" component=\"span\" className={classes.foot}>\r\n                  Back\r\n                </Button>\r\n              </TableCell>\r\n              <TableCell></TableCell>\r\n              <TableCell></TableCell>\r\n              <TableCell>\r\n                <Button variant=\"contained\" component=\"span\" className={classes.foot}>\r\n                  Next\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n} "]},"metadata":{},"sourceType":"module"}